name: build

permissions:
  # Allows checking out code
  contents: read
  # Allows uploading SARIF results to the Security tab
  security-events: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sast_scan:
    name: Run Static Code Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Run Trivy vulnerability scanner in repo mode (SAST/SCA)
        # Scans local file system (fs) for dependency vulnerabilities
        uses: aquasecurity/trivy-action@0.28.0
        env:
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db:2
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL'

      - name: Upload Trivy SARIF results as build artifact
        # Saves the raw report as a pipeline artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-results
          path: trivy-results.sarif

      - name: Upload Trivy SARIF to GitHub Code Scanning
        # Sends results to the Security tab
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

  image_scan:
    name: Build Image and Run Image Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        # Recommended action for Docker setup
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          # Using specific Docker Hub secret names
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build Docker Image
        run: docker build -f Dockerfile -t pygoat_app:latest .
    
      - name: Docker Scout Scan
        # Scans the locally built image for vulnerabilities
        uses: docker/scout-action@v1
        with:
          # Using specific Docker Hub secret names for Scout
          dockerhub-user: ${{ secrets.DOCKER_HUB_USERNAME }}
          dockerhub-password: ${{ secrets.DOCKER_HUB_TOKEN }}
          command: quickview,cves
          only-severities: critical,high
          image: pygoat_app:latest
          sarif-file: scout-report.sarif

      - name: Upload Scout SARIF artifact
        # Saves the raw report as a pipeline artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docker-scout-findings
          path: scout-report.sarif

      - name: Upload Scout SARIF to GitHub Code Scanning
        # Sends results to the Security tab
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: scout-report.sarif
